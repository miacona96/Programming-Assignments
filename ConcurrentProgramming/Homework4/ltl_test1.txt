ltl p1: <> ((nr_leaders==1))
  0:	proc  - (:root:) creates proc  0 (:init:)
0 :init ini I = 1          
Process Statement          I          
0 :init ini I<=5           1          
0 :init ini Ini[0]==0)&[0] 1          
0 :init ini Ini[0] = I     1          
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] I          
0 :init ini I = (I+1)      1          0          0          0          0          0          1          
0 :init ini I<=5           1          0          0          0          0          0          2          
0 :init ini Ini[2]==0)&[2] 1          0          0          0          0          0          2          
0 :init ini Ini[2] = I     1          0          0          0          0          0          2          
0 :init ini I = (I+1)      1          0          2          0          0          0          2          
0 :init ini I<=5           1          0          2          0          0          0          3          
0 :init ini Ini[1]==0)&[1] 1          0          2          0          0          0          3          
0 :init ini Ini[1] = I     1          0          2          0          0          0          3          
0 :init ini I = (I+1)      1          3          2          0          0          0          3          
0 :init ini I<=5           1          3          2          0          0          0          4          
0 :init ini Ini[3]==0)&[3] 1          3          2          0          0          0          4          
0 :init ini Ini[3] = I     1          3          2          0          0          0          4          
0 :init ini I = (I+1)      1          3          2          4          0          0          4          
0 :init ini I<=5           1          3          2          4          0          0          5          
0 :init ini Ini[4]==0)&[4] 1          3          2          4          0          0          5          
0 :init ini Ini[4] = I     1          3          2          4          0          0          5          
0 :init ini I = (I+1)      1          3          2          4          5          0          5          
0 :init ini I>5            1          3          2          4          5          0          6          
0 :init ini break          1          3          2          4          5          0          6          
0 :init ini proc = 1       1          3          2          4          5          0          6          
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          
0 :init ini proc<=5        1          3          2          4          5          0          1          6          
Starting nnode with pid 1
 27:	proc  0 (:init:) creates proc  1 (nnode)
0 :init ini run nnode(q[(p 1          3          2          4          5          0          1          6          
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          q[0]       q[1]       q[2]       q[3]       q[4]       
0 :init ini proc = (proc+1 1          3          2          4          5          0          1          6                                                                 
0 :init ini proc<=5        1          3          2          4          5          0          2          6                                                                 
Starting nnode with pid 2
 30:	proc  0 (:init:) creates proc  2 (nnode)
0 :init ini run nnode(q[(p 1          3          2          4          5          0          2          6                                                                 
0 :init ini proc = (proc+1 1          3          2          4          5          0          2          6                                                                 
0 :init ini proc<=5        1          3          2          4          5          0          3          6                                                                 
Starting nnode with pid 3
 33:	proc  0 (:init:) creates proc  3 (nnode)
0 :init ini run nnode(q[(p 1          3          2          4          5          0          3          6                                                                 
0 :init ini proc = (proc+1 1          3          2          4          5          0          3          6                                                                 
0 :init ini proc<=5        1          3          2          4          5          0          4          6                                                                 
Starting nnode with pid 4
 36:	proc  0 (:init:) creates proc  4 (nnode)
0 :init ini run nnode(q[(p 1          3          2          4          5          0          4          6                                                                 
0 :init ini proc = (proc+1 1          3          2          4          5          0          4          6                                                                 
0 :init ini proc<=5        1          3          2          4          5          0          5          6                                                                 
Starting nnode with pid 5
 39:	proc  0 (:init:) creates proc  5 (nnode)
0 :init ini run nnode(q[(p 1          3          2          4          5          0          5          6                                                                 
0 :init ini proc = (proc+1 1          3          2          4          5          0          5          6                                                                 
0 :init ini proc>5         1          3          2          4          5          0          6          6                                                                 
0 :init ini break          1          3          2          4          5          0          6          6                                                                 
 MSC : 2
3 nnode 19  printf(' MSC : 1          3          2          4          5          0          6          6                                                                 
 MSC : 5
5 nnode 19  printf(' MSC : 1          3          2          4          5          0          6          6                                                                 
3 nnode 20  values: 4!one, 1          3          2          4          5          0          6          6                                                                 
3 nnode 20  out!one,mynumb 1          3          2          4          5          0          6          6                                                                 
 MSC : 3
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(3    q[0]       q[1]       q[2]       q[3]       q[4]       
2 nnode 19  printf(' MSC : 1          3          2          4          5          0          6          6          out[one,2]                                  [one,2]               
5 nnode 20  values: 1!one, 1          3          2          4          5          0          6          6          out[one,2]                                  [one,2]               
5 nnode 20  out!one,mynumb 1          3          2          4          5          0          6          6          out[one,2]                                  [one,2]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(3    nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
2 nnode 20  values: 3!one, 1          3          2          4          5          0          6          6          out[one,2] out[one,5] [one,5]                          [one,2]               
2 nnode 20  out!one,mynumb 1          3          2          4          5          0          6          6          out[one,2] out[one,5] [one,5]                          [one,2]               
 MSC : 4
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(2    nnode(3    nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
4 nnode 19  printf(' MSC : 1          3          2          4          5          0          6          6          out[one,3] out[one,2] out[one,5] [one,5]               [one,3]    [one,2]               
3 nnode 23  values: 3?one, 1          3          2          4          5          0          6          6          out[one,3] out[one,2] out[one,5] [one,5]               [one,3]    [one,2]               
3 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,3] out[one,2] out[one,5] [one,5]               [one,3]    [one,2]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(2    nnode(3    nnode(3):n nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,5] [one,5]                          [one,2]               
4 nnode 20  values: 5!one, 1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,5] [one,5]                          [one,2]               
4 nnode 20  out!one,mynumb 1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,5] [one,5]                          [one,2]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(2    nnode(3    nnode(3):n nnode(4    nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,4] out[one,5] [one,5]                          [one,2]    [one,4]    
 MSC : 1
1 nnode 19  printf(' MSC : 1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,4] out[one,5] [one,5]                          [one,2]    [one,4]    
1 nnode 20  values: 2!one, 1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,4] out[one,5] [one,5]                          [one,2]    [one,4]    
1 nnode 20  out!one,mynumb 1          3          2          4          5          0          6          6          out[one,3] inp):      3          out[one,4] out[one,5] [one,5]                          [one,2]    [one,4]    
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(2    nnode(3    nnode(3):n nnode(4    nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
4 nnode 23  values: 4?one, 1          3          2          4          5          0          6          6          out[one,1] out[one,3] inp):      3          out[one,4] out[one,5] [one,5]    [one,1]               [one,2]    [one,4]    
4 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,1] out[one,3] inp):      3          out[one,4] out[one,5] [one,5]    [one,1]               [one,2]    [one,4]    
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(2    nnode(3    nnode(3):n nnode(4    nnode(4):n nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
2 nnode 23  values: 2?one, 1          3          2          4          5          0          6          6          out[one,1] out[one,3] inp):      3          inp):      2          out[one,5] [one,5]    [one,1]                          [one,4]    
2 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,1] out[one,3] inp):      3          inp):      2          out[one,5] [one,5]    [one,1]                          [one,4]    
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(2    nnode(2):n nnode(3    nnode(3):n nnode(4    nnode(4):n nnode(5    q[0]       q[1]       q[2]       q[3]       q[4]       
2 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          out[one,5] [one,5]                                     [one,4]    
4 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          out[one,5] [one,5]                                     [one,4]    
5 nnode 23  values: 5?one, 1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          out[one,5] [one,5]                                     [one,4]    
5 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          out[one,5] [one,5]                                     [one,4]    
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(2    nnode(2):n nnode(3    nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
2 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          inp):      4          [one,5]                                                
3 nnode 28  values: 4!two, 1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          inp):      4          [one,5]                                                
3 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          out[one,1] inp):      1          inp):      3          inp):      2          inp):      4          [one,5]                                                
2 nnode 28  values: 3!two, 1          3          2          4          5          0          6          6          out[one,1] inp):      1          out[two,3] 3          inp):      2          inp):      4          [one,5]                          [two,3]               
2 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          out[one,1] inp):      1          out[two,3] 3          inp):      2          inp):      4          [one,5]                          [two,3]               
2 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          out[one,1] out[two,1] 1          out[two,3] 3          inp):      2          inp):      4          [one,5]               [two,1]    [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
5 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,1] out[two,1] 1          1          out[two,3] 3          inp):      2          inp):      4          [one,5]               [two,1]    [two,3]               
1 nnode 23  values: 1?one, 1          3          2          4          5          0          6          6          out[one,1] out[two,1] 1          1          out[two,3] 3          inp):      2          inp):      4          [one,5]               [two,1]    [two,3]               
1 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,1] out[two,1] 1          1          out[two,3] 3          inp):      2          inp):      4          [one,5]               [two,1]    [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 24  Active         1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          inp):      2          inp):      4                                [two,1]    [two,3]               
3 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          inp):      2          inp):      4                                [two,1]    [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          inp):      4                                [two,1]    [two,3]               
4 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          inp):      4                                [two,1]    [two,3]               
5 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          inp):      4                                [two,1]    [two,3]               
5 nnode 28  values: 1!two, 1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          inp):      4                                [two,1]    [two,3]               
5 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          inp):      4                                [two,1]    [two,3]               
1 nnode 28  values: 2!two, 1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          [two,4]               [two,1]    [two,3]               
1 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          inp):      5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          [two,4]               [two,1]    [two,3]               
5 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          out[two,5] 5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          [two,4]    [two,5]    [two,1]    [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          out[two,5] 5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          4          [two,4]    [two,5]    [two,1]    [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n nnode(5):n q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 42  values: 3?two, 1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          4          [two,4]    [two,5]    [two,1]    [two,3]               
3 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          out[two,3] 3          3          inp):      2          out[two,4] 4          4          [two,4]    [two,5]    [two,1]    [two,3]               
3 nnode 43  Active         1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          inp):      2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]               
4 nnode 28  values: 5!two, 1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          inp):      2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]               
4 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          inp):      2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]               
3 nnode 45  neighbourR>nr) 1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]    [two,2]    
5 nnode 42  values: 5?two, 1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]    [two,2]    
5 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          out[two,4] 4          4          [two,4]    [two,5]               [two,3]    [two,2]    
5 nnode 43  Active         1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          inp):      4          2          [two,4]    [two,5]               [two,3]               
2 nnode 42  values: 2?two, 1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          inp):      4          2          [two,4]    [two,5]               [two,3]               
2 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,5] 5          5          out[two,1] 1          1          inp):      3          1          out[two,2] 2          inp):      4          2          [two,4]    [two,5]               [two,3]               
1 nnode 42  values: 1?two, 1          3          2          4          5          0          6          6          out[two,5] 5          5          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2          [two,4]                          [two,3]               
1 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,5] 5          5          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2          [two,4]                          [two,3]               
2 nnode 43  Active         1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2                                           [two,3]               
1 nnode 43  Active         1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2                                           [two,3]               
2 nnode 45  else           1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2                                           [two,3]               
spin: ltl_1.pml:51, Error: value (-1->255 (8)) truncated in assignment
2 nnode 51  nr_leaders = ( 1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2                                           [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 47  maximum = neig 1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          1          out[two,2] 2          inp):      4          2          255                                         [two,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 48  values: 4!one, 1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          3          1          out[two,2] 2          inp):      4          2          255                                         [two,3]               
3 nnode 48  out!one,neighb 1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          inp):      3          3          1          out[two,2] 2          inp):      4          2          255                                         [two,3]               
2 nnode 52  Active = 0     1          3          2          4          5          0          6          6          inp):      5          4          inp):      1          5          out): [two 3          3          1          out[two,2] 2          inp):      4          2          255                                         [two,3][on            
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
5 nnode 45  else           1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          inp):      4          2          255                                         [two,3][on            
5 nnode 51  nr_leaders = ( 1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          inp):      4          2          255                                         [two,3][on            
5 nnode 52  Active = 0     1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          inp):      4          2          254                                         [two,3][on            
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
4 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          inp):      0          4          2          254                                         [two,3][on            
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 45  neighbourR>nr) 1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
1 nnode 47  maximum = neig 1          3          2          4          5          0          6          6          inp):      5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 48  values: 2!one, 1          3          2          4          5          0          6          6          inp):      5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
1 nnode 48  out!one,neighb 1          3          2          4          5          0          6          6          inp):      5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
2 nnode 23  values: 2?one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                   [one,5]               [two,3][on            
2 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                   [one,5]               [two,3][on            
4 nnode 42  values: 4?two, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
4 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          out[two,2] 2          2          inp):      0          4          2          254                                         [two,3][on            
4 nnode 43  Active         1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
4 nnode 45  else           1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
2 nnode 24  else           1          3          2          4          5          0          6          6          out[one,5] 5          5          4          inp):      0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
2 nnode 38  values: 3!one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out):      0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
2 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out):      0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
3 nnode 23  values: 3?one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                              [one,5]    [one,3]               
3 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [two 3          3          1          inp[one,3] 2          3          inp):      0          4          2          254                              [one,5]    [one,3]               
4 nnode 51  nr_leaders = ( 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          inp[one,3] 2          3          inp):      0          4          2          254                                         [one,3]               
3 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          inp[one,3] 2          3          inp):      0          4          2          253                                         [one,3]               
4 nnode 52  Active = 0     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          inp[one,3] 2          3          inp):      0          4          2          253                                         [one,3]               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3]               
3 nnode 28  values: 4!two, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3]               
3 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          inp):      3          3          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3]               
3 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          3          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3][tw            
4 nnode 23  values: 4?one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3][tw            
4 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out):      0          2          3          inp):      0          4          2          253                                         [one,3][tw            
4 nnode 24  else           1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp[two,5] 0          2          3          inp):      0          4          2          253                                         [two,5]               
4 nnode 38  values: 5!one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out):      0          2          3          inp):      0          4          2          253                                         [two,5]               
4 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out):      0          2          3          inp):      0          4          2          253                                         [two,5]               
5 nnode 23  values: 5?one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out[one,3] 0          2          3          inp):      0          4          2          253                                         [two,5]    [one,3]    
5 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out[one,3] 0          2          3          inp):      0          4          2          253                                         [two,5]    [one,3]    
4 nnode 42  values: 4?two, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out[one,3] 0          2          3          inp):      0          4          3          253                                         [two,5]               
4 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          out[one,3] 0          2          3          inp):      0          4          3          253                                         [two,5]               
4 nnode 43  else           1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          inp):      0          4          3          253                                                               
5 nnode 24  else           1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          inp):      0          4          3          253                                                               
5 nnode 38  values: 1!one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          inp):      0          4          3          253                                                               
5 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          inp):      0          4          3          253                                                               
1 nnode 23  values: 1?one, 1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          out[one,3] 0          4          3          253        [one,3]                                                
1 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 5          5          4          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          out[one,3] 0          4          3          253        [one,3]                                                
4 nnode 55  values: 5!two, 1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          out[one,3] 0          4          3          253                                                               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
4 nnode 55  out!two,nr     1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          inp):      0          2          5          out[one,3] 0          4          3          253                                                               
1 nnode 24  Active         1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          out[one,3] 0          4          3          253                                                    [two,5]    
5 nnode 42  values: 5?two, 1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          out[one,3] 0          4          3          253                                                    [two,5]    
5 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          out[one,3] 0          4          3          253                                                    [two,5]    
1 nnode 26  nr!=maximum    1          3          2          4          5          0          6          6          inp):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
1 nnode 28  values: 2!two, 1          3          2          4          5          0          6          6          out):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
1 nnode 28  out!two,nr     1          3          2          4          5          0          6          6          out):      5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
1 nnode 29  neighbourR = n 1          3          2          4          5          0          6          6          out[two,3] 5          5          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                   [two,3]                                     
2 nnode 42  values: 2?two, 1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                   [two,3]                                     
2 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[one,5] 0          1          5          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                   [two,3]                                     
2 nnode 43  else           1          3          2          4          5          0          6          6          out[two,3] 5          3          3          inp):      0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
2 nnode 55  values: 3!two, 1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out):      0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
2 nnode 55  out!two,nr     1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out):      0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                                                               
5 nnode 43  else           1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                              [two,3]                          
5 nnode 55  values: 1!two, 1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                              [two,3]                          
5 nnode 55  out!two,nr     1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          inp):      0          4          5          253                              [two,3]                          
1 nnode 42  values: 1?two, 1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          out[two,5] 0          4          5          253        [two,5]               [two,3]                          
1 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          out[two,3] 5          3          3          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          out[two,5] 0          4          5          253        [two,5]               [two,3]                          
3 nnode 42  values: 3?two, 1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          out[two,5] 0          4          5          253                              [two,3]                          
3 nnode 22  inp?two,nr     1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          out): [one 3          5          5          out[two,5] 0          2          5          out[two,5] 0          4          5          253                              [two,3]                          
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 43  Active         1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      3          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
1 nnode 43  Active         1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      3          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
3 nnode 45  neighbourR>nr) 1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      3          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
1 nnode 45  else           1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      3          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
3 nnode 47  maximum = neig 1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      3          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
1 nnode 51  nr_leaders = ( 1          3          2          4          5          0          6          6          inp):      5          3          5          out[two,3] 0          1          3          inp):      5          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          253                                                               
3 nnode 48  values: 4!one, 1          3          2          4          5          0          6          6          out):      5          3          5          out[two,3] 0          1          3          inp):      5          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          252                                                               
3 nnode 48  out!one,neighb 1          3          2          4          5          0          6          6          out):      5          3          5          out[two,3] 0          1          3          inp):      5          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          252                                                               
4 nnode 23  values: 4?one, 1          3          2          4          5          0          6          6          out):      5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          252                                         [one,5]               
4 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out):      5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[two,5] 0          2          5          out[two,5] 0          4          5          252                                         [one,5]               
1 nnode 52  Active = 0     1          3          2          4          5          0          6          6          out):      5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          inp):      0          2          5          out[two,5] 0          4          5          252                                                               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):A nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
4 nnode 24  else           1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          inp):      0          2          5          out[two,5] 0          4          5          252                                                               
4 nnode 38  values: 5!one, 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          inp):      0          2          5          out[two,5] 0          4          5          252                                                               
4 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          inp):      0          2          5          out[two,5] 0          4          5          252                                                               
5 nnode 23  values: 5?one, 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[two,5] 0          4          5          252                                                    [one,5]    
5 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[two,5] 0          4          5          252                                                    [one,5]    
5 nnode 24  else           1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          inp):      0          4          5          252                                                               
5 nnode 38  values: 1!one, 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out):      0          4          5          252                                                               
5 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out):      0          4          5          252                                                               
1 nnode 23  values: 1?one, 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252        [one,5]                                                
1 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252        [one,5]                                                
1 nnode 24  else           1          3          2          4          5          0          6          6          inp):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
1 nnode 38  values: 2!one, 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
1 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out):      0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
2 nnode 23  values: 2?one, 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                   [one,5]                                     
2 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[two,3] 0          1          3          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                   [one,5]                                     
2 nnode 24  else           1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          inp):      0          1          5          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
2 nnode 38  values: 3!one, 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out):      0          1          5          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
2 nnode 38  out!one,nr     1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out):      0          1          5          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
3 nnode 23  values: 3?one, 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                              [one,5]                          
3 nnode 22  inp?one,nr     1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out[one,5] 5          5          3          out[one,5] 0          2          5          out[one,5] 0          4          5          252                              [one,5]                          
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):A nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 24  Active         1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          inp):      5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
3 nnode 26  else           1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out):      5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
3 nnode 31  know_winner =  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out):      5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):A nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):k nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
3 nnode 32  values: 4!winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out):      1          5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
3 nnode 32  out!winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out):      1          5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                                               
4 nnode 58  values: 4?winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                         [winner,5]            
4 nnode 22  inp?winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out[one,5] 0          2          5          out[one,5] 0          4          5          252                                         [winner,5]            
4 nnode 59  nr!=mynumber   1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          inp):      0          2          5          out[one,5] 0          4          5          252                                                               
3 nnode 33  nr_leaders = ( 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          inp):      0          2          5          out[one,5] 0          4          5          252                                                               
 MSC : LOST 
4 nnode 61  printf(' MSC : 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          inp):      0          2          5          out[one,5] 0          4          5          253                                                               
4 nnode 65  else           1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          inp):      0          2          5          out[one,5] 0          4          5          253                                                               
4 nnode 67  values: 5!winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out):      0          2          5          out[one,5] 0          4          5          253                                                               
4 nnode 67  out!winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out):      0          2          5          out[one,5] 0          4          5          253                                                               
5 nnode 58  values: 5?winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out[one,5] 0          4          5          253                                                    [winner,5] 
5 nnode 22  inp?winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out[one,5] 0          4          5          253                                                    [winner,5] 
5 nnode 59  else           1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          inp):      0          4          5          253                                                               
 MSC : LEADER 
5 nnode 63  printf(' MSC : 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out):      0          4          5          253                                                               
5 nnode 65  else           1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out):      0          4          5          253                                                               
5 nnode 67  values: 1!winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out):      0          4          5          253                                                               
5 nnode 67  out!winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out):      0          4          5          253                                                               
243:	proc  5 (nnode) terminates
1 nnode 58  values: 1?winn 1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253        [winner,5]                                             
1 nnode 22  inp?winner,nr  1          3          2          4          5          0          6          6          out[one,5] 0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253        [winner,5]                                             
1 nnode 59  nr!=mynumber   1          3          2          4          5          0          6          6          inp):      0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253                                                               
246:	proc  4 (nnode) terminates
 MSC : LOST 
Process Statement          :init:([0] :init:([1] :init:([2] :init:([3] :init:([4] :init:([5] :init:(0): I          nnode(1    nnode(1):A nnode(1):m nnode(1):n nnode(1):n nnode(2    nnode(2):A nnode(2):n nnode(2):n nnode(3    nnode(3):k nnode(3):m nnode(3):n nnode(3):n nnode(4    nnode(4):A nnode(4):n nnode(4):n nnode(5    nnode(5):A nnode(5):n nnode(5):n nr_leaders q[0]       q[1]       q[2]       q[3]       q[4]       
1 nnode 61  printf(' MSC : 1          3          2          4          5          0          6          6          inp):      0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253                                                               
1 nnode 65  else           1          3          2          4          5          0          6          6          out):      0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253                                                               
1 nnode 67  values: 2!winn 1          3          2          4          5          0          6          6          out):      0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253                                                               
1 nnode 67  out!winner,nr  1          3          2          4          5          0          6          6          out):      0          5          3          5          out[one,5] 0          1          5          out): [win 1          5          5          5          out): [win 0          2          5          out): [win 0          4          5          253                                                               
-------------
depth-limit (-u250 steps) reached
#processes: 4
250:	proc  3 (nnode) ltl_1.pml:22 (state 45)
250:	proc  2 (nnode) ltl_1.pml:22 (state 45)
250:	proc  1 (nnode) ltl_1.pml:69 (state 43)
250:	proc  0 (:init:) ltl_1.pml:106 (state 33)
6 processes created